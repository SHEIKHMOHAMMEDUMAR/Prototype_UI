{"ast":null,"code":"var o = Object.defineProperty;\nvar l = Object.getOwnPropertyDescriptor;\nvar i = Object.getOwnPropertyNames;\nvar t = Object.prototype.hasOwnProperty;\n\nvar u = (a, e) => {\n  for (var r in e) o(a, r, {\n    get: e[r],\n    enumerable: !0\n  });\n},\n    d = (a, e, r, n) => {\n  if (e && typeof e == \"object\" || typeof e == \"function\") for (let s of i(e)) !t.call(a, s) && s !== r && o(a, s, {\n    get: () => e[s],\n    enumerable: !(n = l(e, s)) || n.enumerable\n  });\n  return a;\n};\n\nvar C = a => d(o({}, \"__esModule\", {\n  value: !0\n}), a);\n\nvar P = {};\nu(P, {\n  default: () => S\n});\nmodule.exports = C(P);\nvar S = [\"Alley\", \"Avenue\", \"Branch\", \"Bridge\", \"Brook\", \"Brooks\", \"Burg\", \"Burgs\", \"Bypass\", \"Camp\", \"Canyon\", \"Cape\", \"Causeway\", \"Center\", \"Centers\", \"Circle\", \"Circles\", \"Cliff\", \"Cliffs\", \"Club\", \"Common\", \"Corner\", \"Corners\", \"Course\", \"Court\", \"Courts\", \"Cove\", \"Coves\", \"Creek\", \"Crescent\", \"Crest\", \"Crossing\", \"Crossroad\", \"Curve\", \"Dale\", \"Dam\", \"Divide\", \"Drive\", \"Drive\", \"Drives\", \"Estate\", \"Estates\", \"Expressway\", \"Extension\", \"Extensions\", \"Fall\", \"Falls\", \"Ferry\", \"Field\", \"Fields\", \"Flat\", \"Flats\", \"Ford\", \"Fords\", \"Forest\", \"Forge\", \"Forges\", \"Fork\", \"Forks\", \"Fort\", \"Freeway\", \"Garden\", \"Gardens\", \"Gateway\", \"Glen\", \"Glens\", \"Green\", \"Greens\", \"Grove\", \"Groves\", \"Harbor\", \"Harbors\", \"Haven\", \"Heights\", \"Highway\", \"Hill\", \"Hills\", \"Hollow\", \"Inlet\", \"Inlet\", \"Island\", \"Island\", \"Islands\", \"Islands\", \"Isle\", \"Isle\", \"Junction\", \"Junctions\", \"Key\", \"Keys\", \"Knoll\", \"Knolls\", \"Lake\", \"Lakes\", \"Land\", \"Landing\", \"Lane\", \"Light\", \"Lights\", \"Loaf\", \"Lock\", \"Locks\", \"Locks\", \"Lodge\", \"Lodge\", \"Loop\", \"Mall\", \"Manor\", \"Manors\", \"Meadow\", \"Meadows\", \"Mews\", \"Mill\", \"Mills\", \"Mission\", \"Mission\", \"Motorway\", \"Mount\", \"Mountain\", \"Mountain\", \"Mountains\", \"Mountains\", \"Neck\", \"Orchard\", \"Oval\", \"Overpass\", \"Park\", \"Parks\", \"Parkway\", \"Parkways\", \"Pass\", \"Passage\", \"Path\", \"Pike\", \"Pine\", \"Pines\", \"Place\", \"Plain\", \"Plains\", \"Plains\", \"Plaza\", \"Plaza\", \"Point\", \"Points\", \"Port\", \"Port\", \"Ports\", \"Ports\", \"Prairie\", \"Prairie\", \"Radial\", \"Ramp\", \"Ranch\", \"Rapid\", \"Rapids\", \"Rest\", \"Ridge\", \"Ridges\", \"River\", \"Road\", \"Road\", \"Roads\", \"Roads\", \"Route\", \"Row\", \"Rue\", \"Run\", \"Shoal\", \"Shoals\", \"Shore\", \"Shores\", \"Skyway\", \"Spring\", \"Springs\", \"Springs\", \"Spur\", \"Spurs\", \"Square\", \"Square\", \"Squares\", \"Squares\", \"Station\", \"Station\", \"Stravenue\", \"Stravenue\", \"Stream\", \"Stream\", \"Street\", \"Street\", \"Streets\", \"Summit\", \"Summit\", \"Terrace\", \"Throughway\", \"Trace\", \"Track\", \"Trafficway\", \"Trail\", \"Trail\", \"Tunnel\", \"Tunnel\", \"Turnpike\", \"Turnpike\", \"Underpass\", \"Union\", \"Unions\", \"Valley\", \"Valleys\", \"Via\", \"Viaduct\", \"View\", \"Views\", \"Village\", \"Village\", \"Villages\", \"Ville\", \"Vista\", \"Vista\", \"Walk\", \"Walks\", \"Wall\", \"Way\", \"Ways\", \"Well\", \"Wells\"];\n0 && (module.exports = {});","map":{"version":3,"sources":["/home/umar/Downloads/Perfios/Prototype_UI/node_modules/@faker-js/faker/dist/cjs/locales/en/address/street_suffix.js"],"names":["o","Object","defineProperty","l","getOwnPropertyDescriptor","i","getOwnPropertyNames","t","prototype","hasOwnProperty","u","a","e","r","get","enumerable","d","n","s","call","C","value","P","default","S","module","exports"],"mappings":"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","sourcesContent":["var o=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var i=Object.getOwnPropertyNames;var t=Object.prototype.hasOwnProperty;var u=(a,e)=>{for(var r in e)o(a,r,{get:e[r],enumerable:!0})},d=(a,e,r,n)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of i(e))!t.call(a,s)&&s!==r&&o(a,s,{get:()=>e[s],enumerable:!(n=l(e,s))||n.enumerable});return a};var C=a=>d(o({},\"__esModule\",{value:!0}),a);var P={};u(P,{default:()=>S});module.exports=C(P);var S=[\"Alley\",\"Avenue\",\"Branch\",\"Bridge\",\"Brook\",\"Brooks\",\"Burg\",\"Burgs\",\"Bypass\",\"Camp\",\"Canyon\",\"Cape\",\"Causeway\",\"Center\",\"Centers\",\"Circle\",\"Circles\",\"Cliff\",\"Cliffs\",\"Club\",\"Common\",\"Corner\",\"Corners\",\"Course\",\"Court\",\"Courts\",\"Cove\",\"Coves\",\"Creek\",\"Crescent\",\"Crest\",\"Crossing\",\"Crossroad\",\"Curve\",\"Dale\",\"Dam\",\"Divide\",\"Drive\",\"Drive\",\"Drives\",\"Estate\",\"Estates\",\"Expressway\",\"Extension\",\"Extensions\",\"Fall\",\"Falls\",\"Ferry\",\"Field\",\"Fields\",\"Flat\",\"Flats\",\"Ford\",\"Fords\",\"Forest\",\"Forge\",\"Forges\",\"Fork\",\"Forks\",\"Fort\",\"Freeway\",\"Garden\",\"Gardens\",\"Gateway\",\"Glen\",\"Glens\",\"Green\",\"Greens\",\"Grove\",\"Groves\",\"Harbor\",\"Harbors\",\"Haven\",\"Heights\",\"Highway\",\"Hill\",\"Hills\",\"Hollow\",\"Inlet\",\"Inlet\",\"Island\",\"Island\",\"Islands\",\"Islands\",\"Isle\",\"Isle\",\"Junction\",\"Junctions\",\"Key\",\"Keys\",\"Knoll\",\"Knolls\",\"Lake\",\"Lakes\",\"Land\",\"Landing\",\"Lane\",\"Light\",\"Lights\",\"Loaf\",\"Lock\",\"Locks\",\"Locks\",\"Lodge\",\"Lodge\",\"Loop\",\"Mall\",\"Manor\",\"Manors\",\"Meadow\",\"Meadows\",\"Mews\",\"Mill\",\"Mills\",\"Mission\",\"Mission\",\"Motorway\",\"Mount\",\"Mountain\",\"Mountain\",\"Mountains\",\"Mountains\",\"Neck\",\"Orchard\",\"Oval\",\"Overpass\",\"Park\",\"Parks\",\"Parkway\",\"Parkways\",\"Pass\",\"Passage\",\"Path\",\"Pike\",\"Pine\",\"Pines\",\"Place\",\"Plain\",\"Plains\",\"Plains\",\"Plaza\",\"Plaza\",\"Point\",\"Points\",\"Port\",\"Port\",\"Ports\",\"Ports\",\"Prairie\",\"Prairie\",\"Radial\",\"Ramp\",\"Ranch\",\"Rapid\",\"Rapids\",\"Rest\",\"Ridge\",\"Ridges\",\"River\",\"Road\",\"Road\",\"Roads\",\"Roads\",\"Route\",\"Row\",\"Rue\",\"Run\",\"Shoal\",\"Shoals\",\"Shore\",\"Shores\",\"Skyway\",\"Spring\",\"Springs\",\"Springs\",\"Spur\",\"Spurs\",\"Square\",\"Square\",\"Squares\",\"Squares\",\"Station\",\"Station\",\"Stravenue\",\"Stravenue\",\"Stream\",\"Stream\",\"Street\",\"Street\",\"Streets\",\"Summit\",\"Summit\",\"Terrace\",\"Throughway\",\"Trace\",\"Track\",\"Trafficway\",\"Trail\",\"Trail\",\"Tunnel\",\"Tunnel\",\"Turnpike\",\"Turnpike\",\"Underpass\",\"Union\",\"Unions\",\"Valley\",\"Valleys\",\"Via\",\"Viaduct\",\"View\",\"Views\",\"Village\",\"Village\",\"Villages\",\"Ville\",\"Vista\",\"Vista\",\"Walk\",\"Walks\",\"Wall\",\"Way\",\"Ways\",\"Well\",\"Wells\"];0&&(module.exports={});\n"]},"metadata":{},"sourceType":"script"}